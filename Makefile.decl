# BEAST/BSE - Bedevilled Audio System / Bedevilled Sound Engine
# Copyright (C) 2006 Tim Janik
#
## GNU Lesser General Public License version 2 or any later version.

# declare variables that we might want to use += on.
INCLUDES=
EXTRA_HEADERS=
MAINTAINERCLEANFILES=$(GENERATED)
CLEANFILES=$(GENERATED_CLEANFILES)
GENERATED_EXTRA_DIST=
GENERATED_CLEANFILES=
GENERATED=$(strip $(GENERATED_EXTRA_DIST) $(GENERATED_CLEANFILES))
EXTRA_DIST=$(GENERATED_EXTRA_DIST)

# assign project wide defaults
AM_CFLAGS = -D_RAPICORN_SOURCE_EXTENSIONS
AM_CXXFLAGS = -D_RAPICORN_SOURCE_EXTENSIONS

# === distfile-list ===
# recursive rule supported by all Makefiles to generate a list of all files
# listed as DISTFILES. this asserts a writable file named $DISTFILE_LIST.
.PHONY: distfile-list
distfile-list:
	@if test ! -f "$(DISTFILE_LIST)" ; then				\
		echo 'distfile-list: $$(DISTFILE_LIST) is unwritable' ;	\
		exit 1 ;						\
	fi
	@for subdir in $(SUBDIRS) ; do				\
	  test "$$subdir" = '.' ||				\
	    $(MAKE) -C "$$subdir" $(AM_MAKEFLAGS) $@ ||		\
	    exit 1 ;						\
	done
	for file in $(DISTFILES) ; do				\
	  test -e "$$file" &&					\
	    echo "$(subdir)/$$file" >> $(DISTFILE_LIST) ;	\
	done ; true

# === check: check-before / check-after ===
.PHONY: check-before check-after
check-am: check-before
check-local: check-after
check-local: ; @:
TESTS=

# === slowcheck ===
# recursive rule supported by all Makefiles to run time consuming checks
.PHONY: slowcheck slowcheck-recursive slowcheck-SLOWTESTS
slowcheck: slowcheck-recursive slowcheck-SLOWTESTS
slowcheck-recursive:
	@for subdir in $(SUBDIRS) ; do				\
	  test "$$subdir" = '.' ||				\
	    $(MAKE) -C "$$subdir" $(AM_MAKEFLAGS) slowcheck ||	\
	    exit 1 ;						\
	done
slowcheck-SLOWTESTS:
	@for tst in $(SLOWTESTS) ; do \
	  ./$$tst --test-slow && echo "PASS: $$tst" || exit 1 ;		\
	done
	@MESSAGETEXT="All $(words $(SLOWTESTS)) slow tests passed"	\
	&& [ 0 -lt $(words $(SLOWTESTS)) ]				\
	&& echo $$MESSAGETEXT | sed 's/./=/g' && echo $$MESSAGETEXT	\
	&& echo $$MESSAGETEXT | sed 's/./=/g' || true
SLOWTESTS=

# === perf ===
# recursive rule supported by all Makefiles to run performance tests
.PHONY: perf perf-recursive perf-PERFTESTS
perf: perf-recursive perf-PERFTESTS
perf-recursive:
	@for subdir in $(SUBDIRS) ; do				\
	  test "$$subdir" = '.' ||				\
	    $(MAKE) -C "$$subdir" $(AM_MAKEFLAGS) perf ||	\
	    exit 1 ;						\
	done
perf-PERFTESTS:
	@for tst in $(PERFTESTS) ; do \
	  ./$$tst --test-perf && echo "PASS: $$tst" || exit 1 ;		\
	done
	@MESSAGETEXT="All $(words $(PERFTESTS)) perf tests passed"	\
	&& [ 0 -lt $(words $(PERFTESTS)) ]				\
	&& echo $$MESSAGETEXT | sed 's/./=/g' && echo $$MESSAGETEXT	\
	&& echo $$MESSAGETEXT | sed 's/./=/g' || true
PERFTESTS=

# === ALLTESTS ===
ALLTESTS = $(TESTS) $(SLOWTESTS) $(PERFTESTS) # used in noinst_PROGRAMS

# === report ===
.PHONY: report
report: all
	@export REPORTFILE="$(REPORTFILE)"			\
	&& [ -z "$$REPORTFILE" ]				\
	&& export REPORTFILE="$(shell pwd)/report.out" ;	\
	( true 							\
	  && echo -n "#TREPSTART: " && date --iso-8601=seconds	\
	  && $(MAKE) $(AM_MAKEFLAGS) check slowcheck perf	\
	  && echo -n "#TREPDONE: "  && date --iso-8601=seconds	\
	) 2>&1 | tee "$$REPORTFILE"
