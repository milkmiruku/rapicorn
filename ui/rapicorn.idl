/* Rapicorn Rope - Remote Object Programming Extension          -*-mode:c++;-*-
 * Copyright (C) 2010 Tim Janik
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * A copy of the GNU Lesser General Public License should ship along
 * with this library; if not, see http://www.gnu.org/copyleft/.
 */

include "hardcoded.idl";

namespace Rapicorn {

sequence StringList {
  string        strings;
};

record Requisition {
  float width;
  float height;
};

/*
 * interface Window {
 *   bool          viewable        ();
 *   void          show            ();
 *   bool          closed          ();
 *   void          close           ();
 *   signal bool   commands        (string     cmdname,
 *                                  StringList args);
 * };
 */

interface Application {
  /* startup */
  void          init_with_x11   (string         application_name,
                                 StringList     cmdline_args);
  string        auto_path       (string         file_name,
                                 string         binary_path,
                                 bool           search_vpath = true);
  void          auto_load       (string         i18n_domain,
                                 string         file_name,
                                 string         binary_path);
  /* windows */
  // WindowList    list_windows    ();
  // Window        create_window   (string     window_identifier,
  //                                StringList arguments = 0,
  //                                StringList env_variables = 0);
  /* execution */
  int           execute_loops   ();
  void          exit            (int            code = 0);
  /* notifications */
  signal void   missing_primary ();
};

} // Rapicorn
