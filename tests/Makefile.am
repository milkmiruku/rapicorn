# Rapicorn - experimental UI toolkit
include $(top_srcdir)/Makefile.decl

INCLUDES += -I$(top_srcdir) $(RAPICORN_GUI_CFLAGS)
DEFS	 += -DRAPICORN_CONVENIENCE -D__SOURCE_COMPONENT__='"Rapicorn@RAPICORN_RELEASE@/$(subdir)/$<"'

noinst_PROGRAMS  = $(EXAMPLES)
noinst_DATA      =
XML_FILES        =
EXAMPLES         =
EXTRA_DIST      += $(XML_FILES)

LDADDS   = $(top_builddir)/ui/librapicorn@RAPICORN_RELEASE@.la $(RAPICORN_DEP_LIBS)
RAPIDRUN = $(top_builddir)/tools/rapidrun
IMGCHECK = $(top_builddir)/rcore/tests/imgcheck
X11TEST_RAPIDRUN = $(X11TEST_SERVER) && rrun() { $(RAPIDRUN) "$$@" $(XLIBSTDERREXTFIX) ; } && rrun

# === programs ===
EXAMPLES        += fileview
fileview_SOURCES = fileview.cc
fileview_LDADD   = $(LDADDS)
XML_FILES       += fileview.xml

# === test rules ===

# alignment test
# alignment.xml contains: snapshot_file="xtmp-alignment.png
XML_FILES  += alignment.xml
EXTRA_DIST += alignment.png
alignment-png-test: $(srcdir)/alignment.xml $(srcdir)/alignment.png
	$(Q) rm -f xtmp-alignment.png
	$(Q) $(X11TEST_RAPIDRUN) -x $(srcdir)/alignment.xml
	$(Q) $(IMGCHECK) $(srcdir)/alignment.png xtmp-alignment.png ; eval "$$TSTDIAGNOSE"
	$(Q) rm -f xtmp-alignment.png
check: alignment-png-test

# arrowsize test
arrowsize-test:
	$(Q) $(X11TEST_RAPIDRUN) -x $(srcdir)/arrowsize-test.xml ; eval "$$TSTDIAGNOSE"
EXTRA_DIST += arrowsize-test.xml
check: arrowsize-test

# factory-test
factory-test: $(srcdir)/factory-test.ref
	$(Q) $(X11TEST_RAPIDRUN) -x --test-dump \
	  --test-matched-node=".*" $(srcdir)/factory-test.xml > $(TSTOUT) ; eval "$$TSTDIAGNOSE_LOGTEST"
	$(Q) eval "$$TSTDIFF" "'$(srcdir)/factory-test.ref'" "'$(TSTOUT)'"
EXTRA_DIST += factory-test.xml factory-test.ref
check: factory-test

# texting test
XML_FILES  += texting.xml
texting-png-test: $(srcdir)/texting.xml
	$(Q) rm -f xtmp-texting.png
	$(Q) $(X11TEST_RAPIDRUN) --snapshot=xtmp-texting.png -x $(srcdir)/texting.xml $(QSTDERR)
	$(Q) eval "$$TSTOCR" xtmp-texting.png "Regu.ar.Text" \""Insensitive Text"\" \""Editab.e Text Edit.r Text"\"
	$(Q) rm -f xtmp-texting.png
check: texting-png-test

xmllint-check:
	$(Q) cd $(srcdir) && $(XMLLINT) --noout $(XML_FILES) ; eval "$$TSTDIAGNOSE" "'linting $(XML_FILES)'"
check: xmllint-check

.PHONY: xmllint-check
stamp-autochecks: $(XML_FILES)
	@$(MAKE) xmllint-check
	@touch $@
noinst_DATA += stamp-autochecks
CLEANFILES += stamp-autochecks
