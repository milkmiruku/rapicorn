# Build and upload development documentation

all: build-stamp
build-stamp:
	$(MAKE) all-docs
	touch $@

top_srcdir  = ../..
git_stamp   = $(wildcard $(top_srcdir)/.git/$(shell git symbolic-ref -q HEAD) $(top_srcdir)/.git/packed-refs)
GBR_VERSION   = $(shell git name-rev HEAD 2>/dev/null | sed 's/.* //')
PRJ_VERSION   = $(shell sed -ne "/^[ \t]*VERSION[ \t]*=/ { s/^[^=]*=[ \t]*//; p; q }" < $(top_srcdir)/Makefile)
DOC_VERSION = $(or $(GBR_VERSION), $(PRJ_VERSION))
SED_MKEVEN  = sed 's/1$$/0/;s/3$$/2/;s/5$$/4/;s/7$$/6/;s/9$$/8/'

DOC_FILES   = rapicorn-core.hh rapicorn.hh
DOC_DIRS    = rcore/ aidacc/ rope/ tools/ ui/ docs/tutorial/
DOCU_GLOBS  = *.dox *.py $(DOCU_HGLOBS)
DOCU_HGLOBS = *.idl *.h *.H *.hh *.proc
DOCU_CGLOBS = $(DOCU_GLOBS) *.c *.C *.cc
SRCTREE     = srctree
DOXYGENV    = doxygen-1.7.4
DOXYGEN     = $(if $(shell which $(DOXYGENV)), $(DOXYGENV), doxygen)
GPRINT	    = @printf '  %-7s%s\n'
Q           = $(if $(findstring 1, $(V)) ,, @)
QSTDOUT     = $(Q:@=1>/dev/null)
QSTDERR	    = $(Q:@=2>/dev/null)

EXCLUDES = rope/cpy2rope.cc rope/cxx-client.[hc][hc] rcore/signalvariants.hh

.PHONY: $(SRCTREE)
$(SRCTREE):
	$(GPRINT) "GEN" $(SRCTREE)/
	$(Q) rm -rf $(SRCTREE)/ && mkdir -p $(SRCTREE)/
	$(GPRINT) "COPY" "Source tree..." \
	&& CWD=`pwd` \
	&& for dir in $(DOC_DIRS) ; do \
	  (mkdir -p $$CWD/$(SRCTREE)/$$dir/ \
	   && cd $(top_srcdir)/$$dir \
	   && find . -maxdepth 1 -type f \( $(patsubst %,-name '%' -o, $(DOCU_CGLOBS)) -false \) \
	      -exec cp {} $$CWD/$(SRCTREE)/$$dir/{} \; ) || exit $? ; \
	  done \
	$(foreach FILE, $(DOC_FILES), \
	  && cp $(top_srcdir)/$(FILE) $(SRCTREE)/$(dir $(FILE)))
	$(GPRINT) "ADD" "File docu commands..." \
	&& cd $(SRCTREE)/ \
	&& find . -type f \( $(patsubst %,-name '%' -o, $(DOCU_GLOBS)) -false \) \
	   -exec sed  '1,+0s,^,/** @file {} */,' {} --in-place \;
	$(GPRINT) "PRUNE" "Generated IDL enums" \
	&& cd $(SRCTREE)/ \
	&& sed 's/^enum\b/#ifndef DOXYGEN\nenum/ ; s/\(operator>>=.*\.pop_evalue().*\)/\1\n#endif/' \
	    */clientapi.hh */serverapi.hh --in-place
	$(GPRINT) "PRUNE" "Exclude files..." \
	&& rm -f $(patsubst %, $(SRCTREE)/%, $(EXCLUDES))
	$(GPRINT) "ADD" "Enumeration docu commands..." \
	&& find $(SRCTREE) -type f \( $(patsubst %,-name '%' -o, $(DOCU_HGLOBS)) -false \) -print0 \
	| xargs -0 python enumdoc.py

LINK_PROJECT_NAME = \
	-e 's|<div id="projectname">Rapicorn|<div id="projectname"><a href="http://rapicorn.org">Rapicorn</a>|'
STRIP_SNIPPET_MARKS = \
	-e '/^ *<span class="comment"> *\/\/\/ *\[[A-Za-z0-9+_-]\+-EXAMPLE\] *<\/span> *$$/d' \
	-e   's,<span class="comment"> */// *\[[A-Za-z0-9+_-]\+-EXAMPLE\] *</span>\n\?,,' \
	-e '/^ *\(<span class="preprocessor"> *\)\?\#  *\[[A-Za-z0-9+_-]\+-EXAMPLE\]\( *<\/span>\)\? *$$/d' \
	-e 's, *<span class="preprocessor"> *\#  *\[[A-Za-z0-9+_-]\+-EXAMPLE\] *<\/span> *\n\?,,'

all-docs: $(git_stamp) doxygen.cfg
	$(GPRINT) "TIDY" "Temporaries..."
	$(Q) rm -rf html.tmp/ && mkdir -p html.tmp/
	$(Q) $(MAKE) $(SRCTREE)
	$(GPRINT) "GEN" "HTML Documentation..."
	$(Q) (cat doxygen.cfg \
	&& echo "STRIP_FROM_PATH  = `pwd`/$(SRCTREE)" \
	&& echo "INPUT		  = $(SRCTREE)/" \
	&& echo "EXAMPLE_PATH	  = $(top_srcdir)/" \
	&& echo "OUTPUT_DIRECTORY = html.tmp/" \
	&& echo -n "PROJECT_NUMBER = $(PRJ_VERSION)" \
	) | nice $(DOXYGEN) - >error.log 2>&1
	$(Q) test ! -s error.log && rm -f error.log \
	|| { echo "WARNING: doxygen issues encountered ($$(wc -l <error.log)): $$(pwd)/error.log" ; cat error.log $(QSTDOUT) ; }
	$(GPRINT) "POLISH" "HTML Files..."
	$(Q) sed $(LINK_PROJECT_NAME) $(STRIP_SNIPPET_MARKS) -i html.tmp/html/*.html
	$(Q) mv html.tmp/html/ html.tmp/$(DOC_VERSION)/
	$(Q) test "$(DOC_VERSION)" != "master" || ln -s $(DOC_VERSION) html.tmp/latest
	$(GPRINT) "RSYNC" "HTML Documentation..."
	$(Q) rsync -aH --del html.tmp/ html/
	$(GPRINT) "CLEAN" "Temporaries..."
	$(Q) rm -rf $(SRCTREE)/ html.tmp/

upload: all
	rsync -zaHP --del '--filter=P /*/' html/  testbit:/srv/dev/html/rapicorn/

clean:
	rm -f build-stamp
	rm -rf $(SRCTREE)/ html.tmp/
	rm -rf html/
maintainer-clean: clean
