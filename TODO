RELEASE:
- remove cairo-inlined/
- cleanup examples, move tour scroller, testtext to test/
- simple clean examples:
  * Hello World + [Close}
  * FileName:[___] [Save] \n Text:[______\n_____] \n [Close]
  * Color:[____] |ColoredDrawing| [Close]
FIXME:
- add command() signal to connect to
- non-working .interface<SomeType&>() should provide a better error message than throwing a NullReference exception
- check that all property changes cause ::changed()
- turn item->m_parent into a Container*
- add per-object Blurb slot to type registration at factory
- grep for FIXME in the sources
- AdjustmentSource::get_adjustment() must be called recursively up the hierarchy as long as adj==NULL
- rename left-padding,etc. Alignment properties because they overlap with Table's child property names
  or rename child properties: left-margin, right-spacing, etc...
CLEANUPS:
- rename paintgadgets.cc to paintitems.cc
- rename table allocation passes
- stefan: s/Factory.parse_resource/Factory::parse_resource/
- stefan: s/create_gadget/create_item/
MISC:
- DPI / font selection: http://primates.ximian.com/~federico/news-2007-01.html#31
- supply overlay dialogs; here, the parent dialog becomes insensitive and the
  overlay dialog reuses the viewport of its parent dialog. it's modal for the parent
  dialog and releases the parent dialog for further operation once closed/answered.
- color names: http://www.w3.org/TR/xhtml-modularization/abstraction.html
  - allow relative color specifications:
    dark(blue)
    light(ref_fg)
    ref_bg
  - requires API that allowes color resolution from a string + reference color (ref_fg,ref_bg)
- put lower-right light into scroll-trough
- cache mouse coords per-pointer and only per-display
- pixel plane caching or backing store rating should consider: width * height * n_combines_per_screen_blit
- s/cancel/cancelled/
- implement SliderArea::list_properties()
- check taht all container types really derive from multi/simple-container
- check all property chaining
- fix (upon resizing):
  terminate called after throwing an instance of 'Birnet::Exception'
    what():  Rapicorn::Plane& Rapicorn::Display::create_plane(Rapicorn::CombineType, double): zero-size display
- make Plane.peek() private and rename poke_span()
- allow notification for signal connections and disconnections
- before processing delete event, synthesize focus out (for the window in question)
  if it has a focus item
- synthesize focus-out before popping up new (modal, override-redirect) windows
- MAKE COMBINE_NORMAL --> over a real alias
- render(): pass on a RenderBuffer from which planes can be created via intersection
- Table: change shrink logic to shrink according to:
  1) shrink hshrink(1)/vshrink(1) children
  2) shrink expand children
  3) shrink *middle* children before edge (start/end packed) children
     (this preserves menubars or close buttons)
BASIC-SIZING:
- there should be per-window settings for:
  - basic-size: goes from something like 12points & 96dpi => 20 pixels
    can be provided in points, pixels, etc.
    "pixel" here is a scalable standard unit (or, could be)
  - basic-font-size: this is basic-size in points
  - basic-arrow-size: this is derived from basic-size by e.g. * 0.875
EVENTS:
- add_grab/remove_grab should queue a synthesized motion event so enter/leave states are
  updated. (test with overlapping buttons)
- button-press/-release: need to queue extra motion event so enter/leave states are updated
RENDERING:
- digital image compositing modes: http://keithp.com/~keithp/porterduff/
- curve_to approximation:
  http://graphics.idav.ucdavis.edu/education/CAGDNotes/Divide-and-Conquer-Bezier-Curve/Divide-and-Conquer-Bezier-Curve.html
  http://www.cs.mtu.edu/~shene/COURSES/cs3621/NOTES/
- geometry primitives: http://astronomy.swin.edu.au/~pbourke/geometry/
- hershey vector fonts: http://astronomy.swin.edu.au/~pbourke/other/hershey/
- color FAQ: http://www.inforamp.net/~poynton/
CHECK/TESTS/ASSERTIONS:
- once-removed children should not be re-addable to a container (simplifies code, shouldn't have dramatic impact)




POPUPS:
- popups should be part of the regular item hierarchy, so popup children, and
  even subpopups of popups should all be part of a single parent<->child
  runtime tree.
- popups should only be considered enabled for popping up if they are visible.
- popups should be flagged !allocatable, because they should not be allocated
  and layed out by their parents.
- the viewport handling logic from Root needs to be split up into a seperate
  container type (Presentable / ViewportArea / Showable).
- popups need to implement viewport handling functionality.
- popups should integrate with the main loop on the toplevel Root container.
