/* Generated by Plic-Rapicorn */
struct XFooRecord {
  bool            single_bool;
  int             single_num;
  float           single_float;
  string          single_string;
  int             sibling1;
  int             sibling2;
  int             multi1;
  int             multi2;
  int             multi3;
  int             multi4;
  ExtensiveEnum   enum_field;
};
struct NestedTypesRec {
  XFooRecord      rec;
  XFooSequence    seq;
};
struct AliasRecord {
  bool            single_bool;
  int             single_num;
  float           single_float;
  string          single_string;
  int             sibling1;
  int             sibling2;
  int             multi1;
  int             multi2;
  int             multi3;
  int             multi4;
  ExtensiveEnum   enum_field;
};
struct NewRecord {
  int             i;
  Enum1           enum1;
  XFooSequence    xfs;
  NestedTypesRec  ntr;
};
struct Refer2Inner {
  InnerRecord     r;
};
struct InnerRecord {
  int             x;
  int             y;
  NewRecord       rec;
};
struct SomeRecord {
  NewRecord       r1;
  NewRecord       r2;
  InnerRecord     r3;
  InnerRecord     r4;
};
class UIWidgetArea {
  typedef Signal<UIWidgetArea, void ()> Signal_void_signal;
  typedef Signal<UIWidgetArea, float (UIWidgetArea ba1, int someint)> Signal_sample_signal;
  Signal_void_signal          sig_void_signal;
  Signal_sample_signal        sig_sample_signal;
  virtual const PropertyList& list_properties ();
  virtual float               dummy () const = 0;
  virtual void                dummy (const &float) = 0;
  virtual string              on_click () const = 0;
  virtual void                on_click (const &string) = 0;
  float                       simple_method ();
  float                       single_arg (int n);
  float                       single_arg2 (int n);
  float                       two_args (int n, float r);
  float                       two_args2 (int n, float r);
  float                       multi_args (int n, float r, int i, string s, float y);
  float                       self_method (UIWidgetArea ba1, UIWidgetArea ba2);
  void                        void_method ();
  string                      on_click2out ();
  void                        on_click2in (string command);
};
class Parent {
};
class Child :
  Parent
{
};
class Descendant :
  Parent,
  Child
{
};
class GrandChild :
  Parent,
  Child,
  Descendant
{
};
struct QuickRecord {
  int             int1;
  int             int2;
};
class MethodTestInterface {
  bool                method_with_bools (bool input, bool optval);
  int                 method_with_ints (int input, int optval);
  float               method_with_floats (float input, float optval);
  string              method_with_string (string input, string optval);
  QuickEnum           method_with_enum (QuickEnum input, QuickEnum optval);
  QuickRecord         method_with_record (QuickRecord input, QuickRecord optval);
  QuickSequence       method_with_sequence (QuickSequence input, QuickSequence optval);
  GrandChild          method_with_interface (GrandChild input, GrandChild optval);
};
class SomeInterface {
  void                use_record (SomeRecord rr);
};
class ButtonArea {
  typedef Signal<ButtonArea, bool (), CollectorUntil0<bool> > Signal_check_activate;
  typedef Signal<ButtonArea, void ()> Signal_activate;
  Signal_check_activate       sig_check_activate;
  Signal_activate             sig_activate;
  virtual const PropertyList& list_properties ();
  virtual string              on_click () const = 0;
  virtual void                on_click (const &string) = 0;
  virtual string              on_click2 () const = 0;
  virtual void                on_click2 (const &string) = 0;
  virtual string              on_click3 () const = 0;
  virtual void                on_click3 (const &string) = 0;
  virtual ClickType           click_type () const = 0;
  virtual void                click_type (const &ClickType) = 0;
};
