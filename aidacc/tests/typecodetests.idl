
namespace AidaTests {

  typedef String SimpleString;

  typedef int32 IntWithFooAsLabel = Num ("Foo");

  typedef float64 FloatWithBlurbBlurb = Num ("Float Label", "Float Blurb", "rw", 97.97);

  typedef int32 Int32AuxRange = Range ("Int32 Range", "This int demonstrates range data use", "rw:extra-option", -100, +100, -5);
  typedef int64 Int64AuxRange = Range ("Int64 Range", "This int demonstrates range data use", "rw:extra-option", -1000, +1000, -50);
  typedef float64 FloatAuxRange = Range ("Float Range", "This float demonstrates range data use", "rw:extra-option", -100, +100, -5);
  typedef String ExtendedString = String ("Extended String", "Demonstrate full string specification", "ro", "Default-String-Value");

  enum EnumType { ENUM_VALUE0, ENUM_VALUE1 };

  typedef EnumType Enum1;

  sequence SimpleSequence {
    int32 sample_integer;
  };
  sequence Int64Sequence {
    int64 v64;
  };

  record SimpleRecord {
    int32    intfield;
    float64  floatfield;
    String stringfield;
    Any    anyfield;
  };

}
