Wed Apr  5 02:11:07 2006  Tim Janik  <timj@gtk.org>

	* birnettests.h: removed unused TFAIL() macro. TERROR() is more
	elaborate anyway and can be used instead.

Tue Apr  4 21:58:49 2006  Tim Janik  <timj@gtk.org>

	* birnettests.h: allow printf-style arguments to TSTART().
	added TERROR() to forcefully abort.

Mon Apr  3 23:00:15 2006  Tim Janik  <timj@gtk.org>

	* birnettests.h: add macros and convenience functions useful for 
	test programs.

	* tests/signal.cc:
	* tests/threads.cc:
	* tests/ring.cc: use test macros.

	* tests/Makefile.am:
	* tests/testutils.h: removed entirely in favour of birnettests.h.

Sun Apr  2 03:28:04 2006  Tim Janik  <timj@gtk.org>

	* birnetcore.h: provide ISLIKELY() as alias for LIKELY().

	* birnetsignaltemplate.hh:
	* birnetsignal.hh:
	* tests/signal.cc: fixed assertions.

	* birnetutilsxx.hh: fixed primitive type ambiguities.

	* Makefile.am: -D_BIRNET_SOURCE_EXTENSIONS is provided by Makefile.decl.

	* tests/Makefile.am: DEFS is defined by Makefile.decl.

Thu Mar 30 19:34:07 2006  Tim Janik  <timj@gtk.org>

	* birnetcore.h: changed switch macro for birnet extensins
	to _BIRNET_SOURCE_EXTENSIONS.

	* birnetcore.h: added more return_if_fail and assertion macros
	plus shorthands. 

	* birnet.h:
	* mksignals.sh:
	* birnetsignal.hh: 
	* birnetsignalslot.hh: 
	* birnetsignaltemplate.hh: added C++ signal system.
	* ChangeLog: added old signal system change entries.

	* tests/signal.cc: test the C++ signal system.

	* configure.inc: added libtool workaround for missing -lpthread.

    Wed Dec 28 01:07:43 2005  Tim Janik  <timj@gtk.org>

	* birnetsignaltemplate.hh: added disconnect() and
	corrsponding -= operators.

	* birnetsignal.hh: added operator== to signal handler
	links, to allow disconnections. implemented disconnect_equal_link()
	for signal links.

	* mksignals.sh:
	* birnetsignalslot.hh: renamed handler to trampoline.
	added slot() constructor for signals + emit() method. with this,
	slot(sig_some_signal) can be connected and disconnected.

	* tests/signal.cc: signal handler data must implement operator== now.

    Wed Jul  6 20:06:05 2005  Tim Janik  <timj@gtk.org>

	* birnetsignal.hh: added struct CollectorUntil0 signal
	collector template. predefine SignalVoid for void(void) signals.

    Mon Apr 18 23:10:21 2005  Tim Janik  <timj@gtk.org>

	* mksignals.sh: /bin/sh is more protable than bash.

    Sun Apr 17 19:06:31 2005  Tim Janik  <timj@gtk.org>

	* birnetsignal.hh: introduce ScopeReference to keep an
	instance referenced within block scope. added SignalFinalize
	which does not need the emitter to be ref/unref-ed around emit(),
	but instead asserts its in finalization stage. cleanups.
	* birnetsignaltemplate.hh: use ScopeReference.

	* tests/signal.cc: removed cruft.


    Wed Mar 30 00:52:05 2005  Tim Janik  <timj@gtk.org>

	* birnetsignalslot.hh: moved signal handler and slot
	definitions here. there're no emitter handlers/slots anymore.
	support extra data argument for function and method handlers.

	* birnetsignaltemplate.hh: removed handlers/slots. moved
	knowledge about emitter obejct into Emission. let class Emission
	care about casting handlers correctly (with or without emitter arg),
	cleaned up signal methods some.

	* birnetsignal.hh: removed HandlerBase, ReferencableBase.
	added with_emitter flag to signal handlers. made SlotBase a regular
	class, rather than a template. 

	* mksignals.sh: fixed line numbers. allow 17 arguments.
	allow specification of maximum argument count. 

	* tests/signal.cc: test data handlers and emitter-less ahndlers.

	* Makefile.am: generate birnetsignalvariants.hh from
	birnetsignalslot.hh (we need 0..17 argument handlers) and
	birnetsignaltemplate.hh (for 0..16 argument signals).

    Tue Mar 29 17:00:08 2005  Tim Janik  <timj@gtk.org>

	* birnetsignal.hh, birnetsignal.cc: namespace change
	to namespace Signals. added EmissionBase, extended SignalBase to
	maintain a signal handler list as ring data structure. removed
	accumulators, added Collectors, added Signature template to extract the
	return type of a function type for functions with up to 16 arguments.
	include birnetsignalvariants.hh to define all signal variants. 

	* birnetsignaltemplate.hh: implement signal with emission and
	handlers etc, for exactly 3 signal arguments. 

	* mksignals.sh: generate signal variants for 0..16 signal 
	arguments from birnetsignaltemplate.hh.

	* Makefile.am: generate birnetsignalvariants.hh.

	* tests/signal.cc: test signal variants for 0..16 arguments with void
	and other return types. 

    Mon Mar 28 10:12:34 2005  Tim Janik  <timj@gtk.org>

	* birnetsignal.hh, birnetsignaldefs.hh:
	moved signals into an extra Signal namespace, renamed Signal::Closure
	to Signal::Handler. 

    Mon Mar 28 10:01:06 2005  Tim Janik  <timj@gtk.org>

	* birnetsignaldefs.hh: disabled signal generation.
	added test implementation of a 3 argument signal which supports passing
	the emitter object as first argument to signal handlers.

	* tests/signal.cc: disabled old signal tests.
	added test for 3 argument signal variant, currently implemented in
	birnetsignaldefs.hh.

    Sun Mar 27 19:52:12 2005  Tim Janik  <timj@gtk.org>

	* birnetsignal.hh, birnetsignalinc.hh:
	* birnetsignaldefs.hh:
	rudimentary signal (callback list) implementation for C++.

	* tests/signal.cc: test signals.

Thu Mar 30 19:12:29 2006  Tim Janik  <timj@gtk.org>

	* birnetcore.h: 
	* birnetutilsxx.cc: added argc/argv to birnet_init().
	propagated change and changed callers.

Sun Mar 19 22:26:02 2006  Tim Janik  <timj@gtk.org>

	* Makefile.am: compile with -DBIRNET_FEATURES.
	fixed up birnetconfig.h generation.

	* birnetthread.h:
	* birnetthread.c:
	moved BirnetThreads to a reference counted model, to
	execute a thread, birnet_thread_start() must be called now.
	birnet_thread_run() will now create a thread and automatically
	start it, the returned thread structure must be unrefed.
	always demand a well formed thread name. added C++ hooks. 
	use 64bit data types for time ranges. some atomic fixes.
	birnet_thread_get_aborted(): return whether a thread got aborted.
	birnet_thread_get_running(): return whether a thread is
	currently running.
	birnet_thread_wait_for_exit(): block until the thread has exited.

	* birnetthreadxx.hh:
	* birnetthreadxx.cc: provide a C++ API for threads. added classes
	Mutex, RecMutex, Cond, Atomic, Thread and Thread::Self.

	* birnetutils.h:
	* birnetutils.c: added for C utilities.

	* birnetutilsxx.hh:
	* birnetutilsxx.cc: define fundamental types in the Birnet:: namespace.
	moved birnet_init() hook logic here. added ReferenceCountImpl class,
	which implements atomic reference counting for objects.

	* birnetcore.h: define BIRNET_STATIC_ASSERT() and
	BIRNET_ASSERT(), removed C++ code. define standard types,
	such as uint64 and unichar.

	* birnetcore.c: removed birnet_init() implementation.

	* birnetcore.hh:
	* birnetcore.cc: removed entirely.

	* tests/threads.cc: extended tests, added C++ tests.

Fri Mar 17 19:41:50 2006  Tim Janik  <timj@gtk.org>

	* birnetcore.h: CVS copied from birnetcore.hh.

	* birnetcore.c: CVS copied from birnetcore.cc.

Thu Mar  9 18:06:55 2006  Tim Janik  <timj@gtk.org>

	* Makefile.am: install birnet.h.

Thu Mar  9 02:57:33 2006  Tim Janik  <timj@gtk.org>

	* birnetcore.cc (birnet_init): allow double initialization.

Thu Mar  9 01:50:07 2006  Tim Janik  <timj@gtk.org>

	* Makefile.am: generate partial library libbirnet.o.

	* birnet.h: combine include header.

	* birnetcore.hh:
	* birnetcore.cc: provide birnet_init() and provide initialization
	hook funcitonality for C++.

	* birnetthread.c: fixed thread start syncronization races.

Tue Mar  7 19:50:01 2006  Tim Janik  <timj@gtk.org>

	* Makefile.am: fix dependency.

Tue Mar  7 03:06:55 2006  Tim Janik  <timj@gtk.org>

	* configure.inc: define AC_BIRNET_REQUIREMENTS() to perform configure
	checks for libbirnet.la.

Tue Mar  7 02:56:25 2006  Tim Janik  <timj@gtk.org>

	* tests/threads.cc: added BirnetThread from sfi/testsfi.c.
	also added a test for atomic integer increments.

	* tests/testutils.h: utility functions for tests.

	* tests/ring.cc: added BirnetRing tests from sfi/testsfi.c.

	* tests/Makefile.am: build and check test programs.

Tue Mar  7 02:34:38 2006  Tim Janik  <timj@gtk.org>

        * Makefile.am: build rules for libbirnet.la.

        * birnetmsg.[hc]: slight atomicity fixes.

        * birnetring.[hc]: removed non ring related cruft.
        added docs to some ring functions.

        * birnetthread.[hc]: fixed atomic functions. fixed
        birnet_thread_run() race by letting newly created threads
        sleep until birnet_thread_run() completed its setup.
        allocate per-thread BirnetCond as part of the thread structure.
        fixed thread handle leaks in birnet_thread_run() by introducing
        birnet_thread_handle_free(). 
        fixed accounting accuracy in thread_info_from_stat_L() by reading
        out /proc/%u/task/%u/stat files which provide per-thread info,
        instead of using getrusage(). renamed mutex macros.
	support GSlice. cache getpid(). added birnet_init().

Tue Mar  7 02:45:06 2006  Tim Janik  <timj@gtk.org>

	* birnetmsg.[hc]:
	* birnetring.[hc]:
	* birnetthread.[hc]: Sfi -> Birnet rename.

Mon Mar  6 20:28:02 2006  Tim Janik  <timj@gtk.org>

	* birnetmsg.[hc]: CVS copied from beast/sfi/sfilog.[hc].

Mon Mar  6 20:24:04 2006  Tim Janik  <timj@gtk.org>

	* birnetthread.[hc]: CVS copied from beast/sfi/sfithreads.[hc].

	* birnetring.[hc]: CVS copied from beast/sfi/sfiprimitives.[hc].
