dnl # Rapicorn                                       -*- Mode: shell-script; -*-
dnl # Copyright (C) 2005-2007 Tim Janik
dnl #
dnl # GNU Lesser General Public License version 2 or any later version.
dnl
builtin(include, acrapicorn.m4)dnl # include special macros

# initialize autoconf for Rapicorn
AC_INIT
AC_CONFIG_SRCDIR([rapicorn/rapicorn.hh])
AM_CONFIG_HEADER(configure.h)
AC_PREREQ(2.57)

# Rapicorn version numbers
AC_DIVERT_BEFORE_HELP([
RAPICORN_RELEASE_YEAR=8     	# increment when ABI or API changes
RAPICORN_RELEASE_MONTH=4    	# increment when ABI or API changes
RAPICORN_REVISION_VERSION=0 	# increment while ABI compatible, otherwise reset
])
dnl# RAPICORN_RELEASE_CANDIDATE may contain rc[0-9]+ or nothing
RAPICORN_RELEASE_CANDIDATE= #rc1

# version numbering and libtool versioning
RAPICORN_VERSION=$RAPICORN_RELEASE_YEAR.$RAPICORN_RELEASE_MONTH.$RAPICORN_REVISION_VERSION
RAPICORN_PACKAGE_VERSION=$RAPICORN_VERSION${RAPICORN_RELEASE_CANDIDATE:+-}${RAPICORN_RELEASE_CANDIDATE}
RAPICORN_RELEASE=`printf %02u%02u $RAPICORN_RELEASE_YEAR $RAPICORN_RELEASE_MONTH`
AC_SUBST(RAPICORN_RELEASE_YEAR)
AC_SUBST(RAPICORN_RELEASE_MONTH)
AC_SUBST(RAPICORN_REVISION_VERSION)
AC_SUBST(RAPICORN_VERSION)
AC_SUBST(RAPICORN_PACKAGE_VERSION)
AC_SUBST(RAPICORN_RELEASE)
AC_DEFINE_UNQUOTED(RAPICORN_VERSION, "$RAPICORN_VERSION", [Rapicorn Version])
AC_DEFINE_UNQUOTED(RAPICORN_PACKAGE_VERSION, "$RAPICORN_PACKAGE_VERSION", [Rapicorn Package/Tarball Version])
LT_CURRENT=$RAPICORN_REVISION_VERSION
LT_REVISION=0
LT_AGE=$RAPICORN_REVISION_VERSION
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

# Rapicorn namespace
AC_MSG_CHECKING([for Rapicorn namespace])
test -z "$RAPICORN_NAMESPACE_NAME" && RAPICORN_NAMESPACE_NAME="Rapicorn$RAPICORN_RELEASE"
xtmp=$(echo "$RAPICORN_NAMESPACE_NAME")  # expand shell variables
RAPICORN_NAMESPACE_NAME="$xtmp"
if test -z "$RAPICORN_NAMESPACE_NAME" || test "$RAPICORN_NAMESPACE_NAME" = "Rapicorn" ; then
    AC_MSG_RESULT(["$RAPICORN_NAMESPACE_NAME"])
    AC_MSG_ERROR([RAPICORN_NAMESPACE_NAME must be specified distinctly to build Rapicorn])
else
    AC_MSG_RESULT([$RAPICORN_NAMESPACE_NAME])
fi
AC_SUBST(RAPICORN_NAMESPACE_NAME)

# architecture information
AC_CANONICAL_TARGET
AC_DEFINE_UNQUOTED(RAPICORN_ARCH_NAME, "$target", [Architecture Description])

# initialize automake, don't define PACKAGE and VERSION
AM_INIT_AUTOMAKE(rapicorn, $RAPICORN_PACKAGE_VERSION, no-define)

# support subdirectories.
AC_PROG_MAKE_SET

# disable automatic maintainer mode.
AM_MAINTAINER_MODE

# declare --enable-* args and collect ac_help strings
AC_ARG_ENABLE(debug,       [  --enable-debug=[no/minimum/yes] turn on debugging [default=yes]],,enable_debug=yes)
AC_ARG_ENABLE(profile,     [  --enable-profile=[no/yes] turn on profiling [default=no]],,enable_profile=no)
AC_ARG_ENABLE(devel-rules, [  --enable-devel-rules=[no/yes]   turn on developer build rules],,)
# $enable_devel_rules

# setup DEBUG defaults
if test "x$enable_debug" = "xyes"; then
  ADDON_CFLAGS="-g -DG_ENABLE_DEBUG"
else if test "x$enable_debug" = "xno"; then
  ADDON_CFLAGS="-DG_DISABLE_CHECKS -DG_DISABLE_CAST_CHECKS" # -DG_DISABLE_ASSERT
else
  ADDON_CFLAGS="-DG_DISABLE_CAST_CHECKS"
fi fi
if test "x$enable_profile" = "xyes"; then
  if test -z "$ADDON_CFLAGS"; then
    ADDON_CFLAGS="-pg"
  else
    ADDON_CFLAGS="$ADDON_CFLAGS -pg"
  fi
fi
# setup CFLAGS
if test -z "$CFLAGS"; then
  CFLAGS="$ADDON_CFLAGS"
else
  CFLAGS="$CFLAGS $ADDON_CFLAGS"
fi
if test -z "$CXXFLAGS"; then
  CXXFLAGS="$ADDON_CFLAGS"
else
  CXXFLAGS="$CXXFLAGS $ADDON_CFLAGS"
fi

# foreign defaults:
MC_IF_VAR_EQ(enable_static, yes, , enable_static=no)
MC_IF_VAR_EQ(enable_shared, no, , enable_shared=yes)

dnl # RAPICORN_COMPUTE_SYSVAL(IDENTIFIER, INCLUDES) defines & AC_SUBST()s RAPICORN_SYSVAL_$1
AC_DEFUN([RAPICORN_SUBST_COMPUTED_SYSVAL], 
    [_AC_COMPUTE_INT([$1], [RAPICORN_SYSVAL_$1], [$2],
	    [AC_MSG_ERROR("failed to detect [$1]")])
    AC_SUBST([RAPICORN_SYSVAL_$1])])

# AC_GCC_REQUIREMENTS() - check for required minimum GCC version
AC_DEFUN([AC_GCC_REQUIREMENTS],
[
    # check for minimum GCC version
    DEPVERSION_GNUC='3.4.6'
    DEPVERSION_FORMULA=[`echo " $DEPVERSION_GNUC" | sed 's/\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\)/(\1<<20)+(\2<<10)+\3/'`]
    AC_MSG_CHECKING([for minimum GCC version ($DEPVERSION_GNUC)])
    AC_TRY_COMPILE([
	    #if defined __GNUC__
	    #  if (__GNUC__ << 20) + (__GNUC_MINOR__ << 10) + __GNUC_PATCHLEVEL__ < $DEPVERSION_FORMULA
	    #    error GCC version too old
	    #  endif
	    #endif
    ],[], depversion_gnuc_match=ok, depversion_gnuc_match=failed)
    AC_MSG_RESULT([$depversion_gnuc_match])
    if test "$depversion_gnuc_match" != "ok" ; then
	AC_MSG_ERROR([detected GNUC version too old])
    fi
])

dnl # AC_RAPICORN_CORE_REQUIREMENTS() checks everything needed for rapicornconfig.h
AC_DEFUN([AC_RAPICORN_CORE_REQUIREMENTS],
[
    # --- sizeof and presence of uint ---
    GLIB_SIZEOF([#include <sys/types.h>], uint, rapicorn_sys_typesh_uint)
    RAPICORN_SIZEOF_SYS_TYPESH_UINT="$glib_cv_sizeof_rapicorn_sys_typesh_uint"
    AC_SUBST(RAPICORN_SIZEOF_SYS_TYPESH_UINT) dnl # for rapicornconfig.h
    GLIB_SIZEOF([], void**, rapicorn_pointer)
    RAPICORN_SIZEOF_POINTER="$glib_cv_sizeof_rapicorn_pointer"
    AC_SUBST(RAPICORN_SIZEOF_POINTER) dnl # for rapicornconfig.h
    GLIB_SIZEOF([], long, rapicorn_long)
    RAPICORN_SIZEOF_LONG="$glib_cv_sizeof_rapicorn_long"
    AC_SUBST(RAPICORN_SIZEOF_LONG) dnl # for rapicornconfig.h

    # --- POLL* ---
    poll_headers=["
      #define _GNU_SOURCE
      #include <sys/types.h>
      #include <sys/poll.h>
    "]
    AC_MSG_CHECKING([for POLL constants])
    RAPICORN_SUBST_COMPUTED_SYSVAL([POLLIN],     $poll_headers)
    RAPICORN_SUBST_COMPUTED_SYSVAL([POLLPRI],    $poll_headers)
    RAPICORN_SUBST_COMPUTED_SYSVAL([POLLOUT],    $poll_headers)
    RAPICORN_SUBST_COMPUTED_SYSVAL([POLLRDNORM], $poll_headers) # needs _GNU_SOURCE on linux
    RAPICORN_SUBST_COMPUTED_SYSVAL([POLLRDBAND], $poll_headers) # needs _GNU_SOURCE on linux
    RAPICORN_SUBST_COMPUTED_SYSVAL([POLLWRNORM], $poll_headers) # needs _GNU_SOURCE on linux
    RAPICORN_SUBST_COMPUTED_SYSVAL([POLLWRBAND], $poll_headers) # needs _GNU_SOURCE on linux
    RAPICORN_SUBST_COMPUTED_SYSVAL([POLLERR],    $poll_headers)
    RAPICORN_SUBST_COMPUTED_SYSVAL([POLLHUP],    $poll_headers)
    RAPICORN_SUBST_COMPUTED_SYSVAL([POLLNVAL],   $poll_headers)
    AC_MSG_RESULT([done])

    # --- OS/Win32 detection ---
    dnl # needs AC_CANONICAL_HOST
    test -z "$host" && {
	missing_macro="AC""_CANONICAL_HOST"
	AC_MSG_ERROR([configure failed to execute $missing_macro])
    }
    AC_MSG_CHECKING([for Win32])
    RAPICORN_OS_CHOICES="WIN32 UNIX" # OS types we will check for
    case "$host" in
	*-*-mingw*)
	    RAPICORN_OS=WIN32
	    AC_MSG_RESULT([yes])
	    ;;
	*)
	    RAPICORN_OS=UNIX
	    AC_MSG_RESULT([no])
	    ;;
    esac
    AC_SUBST(RAPICORN_OS)
    AC_SUBST(RAPICORN_OS_CHOICES)
    AC_DEFINE_UNQUOTED(RAPICORN_OS_$RAPICORN_OS, "1", [Win32 detection])

    dnl # --- sizeof threading structs ---
    GLIB_SIZEOF([#include <pthread.h>], pthread_mutex_t, pth_mutex_t)
    RAPICORN_SIZEOF_PTH_MUTEX_T="$glib_cv_sizeof_pth_mutex_t"
    AC_SUBST(RAPICORN_SIZEOF_PTH_MUTEX_T)
    GLIB_SIZEOF([#include <pthread.h>], pthread_cond_t, pth_cond_t)
    RAPICORN_SIZEOF_PTH_COND_T="$glib_cv_sizeof_pth_cond_t"
    AC_SUBST(RAPICORN_SIZEOF_PTH_COND_T)

    dnl # --- pthread_mutexattr_settype ---
    AC_MSG_CHECKING([for pthread_mutexattr_settype()])
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
      #define _XOPEN_SOURCE   600
      #include <pthread.h>
    ]], [[
      int (*attr_settype) (pthread_mutexattr_t *__attr, int __kind) = pthread_mutexattr_settype;
      int val = PTHREAD_MUTEX_RECURSIVE;
      attr_settype = 0; val = 0;
    ]])],[
      RAPICORN_HAVE_MUTEXATTR_SETTYPE=1
      AC_MSG_RESULT(yes)
    ],[
      RAPICORN_HAVE_MUTEXATTR_SETTYPE=0
      AC_MSG_RESULT(no)
    ])
    AC_SUBST(RAPICORN_HAVE_MUTEXATTR_SETTYPE)

    dnl # --- require libz ---
    if test -z "$LIBZ"; then
        AC_CHECK_LIB(z, gzsetparams,
            [AC_CHECK_HEADER(zlib.h, LIBZ='-lz', LIBZ='')],
            LIBZ='')
    fi
    if test -z "$LIBZ"; then
        AC_MSG_ERROR([Compression library libz is missing, but required])
    fi
    AC_SUBST(LIBZ)
    RAPICORN_DEP_LIBS="$LIBZ $RAPICORN_DEP_LIBS"

    dnl # --- check for GLib --- 
    DEPENDANCIES="glib-2.0 >= 2.6.4 gthread-2.0"
    dnl # define GLIB_CFLAGS and GLIB_LIBS:
    PKG_CHECK_MODULES(GLIB, $DEPENDANCIES,,
	AC_MSG_ERROR([[Failed to detect or find $DEPENDANCIES (consider adjusting \$PKG_CONFIG_PATH)]]))
    dnl # libtool doesn't automatically figure that -pthread implies -lpthread
    RAPICORN_DEP_CFLAGS="$GLIB_CFLAGS"
    RAPICORN_DEP_LIBS=`echo " $GLIB_LIBS" | sed 's/\(-pthread\b\)/-lpthread \1/' `" $RAPICORN_DEP_LIBS"

    dnl # --- check for memory barriers (needs glib) ---
    AC_MSG_CHECKING([for memory barriers])
    saved_CFLAGS="$CFLAGS"
    CFLAGS="$CFLAGS $RAPICORN_DEP_CFLAGS"
    saved_LIBS="$LIBS"
    LIBS="$LIBS $RAPICORN_DEP_LIBS"
    AC_TRY_RUN([ #include <glib.h>
	    int main () {
	    #if defined (G_ATOMIC_OP_MEMORY_BARRIER_NEEDED) || (!GLIB_CHECK_VERSION (2, 8, 0) && !defined (__i386__))
		return 1;
	    #else
		return 0;
	    #endif
	    }],
	RAPICORN_MEMORY_BARRIER_NEEDED=0
	AC_MSG_RESULT(none needed)
        ,
	RAPICORN_MEMORY_BARRIER_NEEDED=1
	AC_MSG_RESULT(required)
        ,)
    CFLAGS="$saved_CFLAGS"
    LIBS="$saved_LIBS"
    AC_SUBST(RAPICORN_MEMORY_BARRIER_NEEDED)

    dnl # --- RAPICORN_DEP_CFLAGS & RAPICORN_DEP_LIBS ---
    AC_SUBST(RAPICORN_DEP_CFLAGS)
    AC_SUBST(RAPICORN_DEP_LIBS)
])

# define package requirements.
AC_DEFUN([AC_I18N_REQUIREMENTS],
[
    dnl # TRANSLATORS: enter your language here
    ALL_LINGUAS="de"
    dnl # TRANSLATORS: enter your language here
    AC_SUBST(ALL_LINGUAS)

    dnl # versioned Rapicorn gettext domain (po/)
    RAPICORN_GETTEXT_DOMAIN=rapicorn$RAPICORN_RELEASE    # version without -rcZ
    AC_SUBST(RAPICORN_GETTEXT_DOMAIN)
    AC_DEFINE_UNQUOTED(RAPICORN_GETTEXT_DOMAIN, "$RAPICORN_GETTEXT_DOMAIN", [Versioned Rapicorn gettext domain])
    GETTEXT_PACKAGE=$RAPICORN_GETTEXT_DOMAIN
    AC_SUBST(GETTEXT_PACKAGE)

    dnl # locale directory for all domains
    dnl # (AM_GLIB_DEFINE_LOCALEDIR() could do this if it would do AC_SUBST())
    saved_prefix="$prefix"
    saved_exec_prefix="$exec_prefix"
    test "x$prefix" = xNONE && prefix=$ac_default_prefix
    test "x$exec_prefix" = xNONE && exec_prefix=$prefix
    if test "x$CATOBJEXT" = "x.mo" ; then
      rapicornlocaledir=`eval echo "${libdir}/locale"`
    else
      rapicornlocaledir=`eval echo "${datadir}/locale"`
    fi
    exec_prefix="$saved_exec_prefix"
    prefix="$saved_prefix"
    AC_SUBST(rapicornlocaledir)

    # --- Rapicorn paths ---
    rapicornbasedir=\${datadir}/rapicorn
    rapicorndocsdir=$rapicornbasedir/v$LT_VERSION/docs
    AC_SUBST(rapicorndocsdir)
    rapicornimagesdir=$rapicornbasedir/v$LT_VERSION/images
    AC_SUBST(rapicornimagesdir)

    dnl # do gettext checks and provide INTLLIBS
    AM_GLIB_GNU_GETTEXT
    AC_PROG_INTLTOOL
])
AC_DEFUN([AC_RAPICORN_REQUIREMENTS],
[
    dnl --- require libpng ---
    if test -z "$LIBPNG"; then
	dnl # png_set_add_alpha() exists only snice libpng v1.2
	AC_MSG_CHECKING(for libpng12)
	if $PKG_CONFIG --exists libpng12 ; then
	    AC_MSG_RESULT(yes)
	    LIBPNG=`$PKG_CONFIG --libs libpng12`
	elif $PKG_CONFIG --exists libpng13 ; then
	    AC_MSG_RESULT(yes)
	    LIBPNG=`$PKG_CONFIG --libs libpng13`
	else
	    AC_MSG_RESULT(no)
	    AC_MSG_ERROR([PNG image library libpng (>= 1.2) is missing, but required])
	fi
    fi
    AC_SUBST(LIBPNG)

    dnl --- require libz ---
    if test -z "$LIBZ"; then
	AC_CHECK_LIB(z, gzsetparams,
	    [AC_CHECK_HEADER(zlib.h, LIBZ='-lz', LIBZ='')],
	    LIBZ='')
    fi
    if test -z "$LIBZ"; then
        AC_MSG_ERROR([Compression library libz is missing, but required])
    fi
    AC_SUBST(LIBZ)

    dnl --- check for Pango --- 
    DEPENDANCIES=
    DEPENDANCIES="$DEPENDANCIES glib-2.0 >= 2.4.11"
    DEPENDANCIES="$DEPENDANCIES pangoft2 >= 1.4.0"
    dnl # define PANGO_CFLAGS and PANGO_LIBS:
    PANGO_PKG_ERRORS=OK
    PKG_CHECK_MODULES(PANGO, $DEPENDANCIES,,
	AC_MSG_WARN([[Failed to detect or find pango, building without pango modules (consider adjusting \$PKG_CONFIG_PATH)]]))
    AC_SUBST(PANGO_CFLAGS)
    AC_SUBST(PANGO_LIBS)
    AM_CONDITIONAL(WITH_PANGO, test "x$PANGO_PKG_ERRORS" = xOK)

    dnl --- check for Gtk+ --- 
    DEPENDANCIES=
    DEPENDANCIES="$DEPENDANCIES glib-2.0 >= 2.4.11"
    DEPENDANCIES="$DEPENDANCIES gtk+-2.0 >= 2.4.11"
    dnl # define GTK_CFLAGS and GTK_LIBS:
    GTK_PKG_ERRORS=OK
    PKG_CHECK_MODULES(GTK, $DEPENDANCIES,,
	AC_MSG_WARN([[Failed to detect or find Gtk+, building without gtk programs (consider adjusting \$PKG_CONFIG_PATH)]]))
    AC_SUBST(GTK_CFLAGS)
    AC_SUBST(GTK_LIBS)
    AM_CONDITIONAL(WITH_GTK, test "x$GTK_PKG_ERRORS" = xOK)

    RAPICORN_DEP_CFLAGS="$GTK_CFLAGS $PANGO_CFLAGS $RAPICORN_DEP_CFLAGS"
    RAPICORN_DEP_LIBS="$GTK_LIBS $PANGO_LIBS $LIBPNG $RAPICORN_DEP_LIBS"
    AC_SUBST(RAPICORN_DEP_CFLAGS)
    AC_SUBST(RAPICORN_DEP_LIBS)
])
AC_DEFUN([AC_PYRAPICORN_REQUIREMENTS],
[
    # find Python development version
    DEPVERSION_PYTHON=2.4
    AM_PATH_PYTHON($DEPVERSION_PYTHON)
    # figure PYTHON_INCLUDES
    py_prefix=`$PYTHON -c "import sys; print sys.prefix"`
    py_exec_prefix=`$PYTHON -c "import sys; print sys.exec_prefix"`
    PYTHON_INCLUDES="-I${py_prefix}/include/python${PYTHON_VERSION}"
    if test "$py_prefix" != "$py_exec_prefix"; then
	PYTHON_INCLUDES="$PYTHON_INCLUDES -I${py_exec_prefix}/include/python${PYTHON_VERSION}"
    fi
    AC_SUBST(PYTHON_INCLUDES)
    # check for python header and Py_InitModule
    AC_MSG_CHECKING([for working Python extension compilation])
    saved_CPPFLAGS="$CPPFLAGS"
    CPPFLAGS="-Wall -Werror $CPPFLAGS $PYTHON_INCLUDES"
    AC_TRY_COMPILE([#include <Python.h>], [Py_InitModule(0,0);], py_build=ok, py_build=failed)
    CPPFLAGS="$saved_CPPFLAGS"
    AC_MSG_RESULT($py_build)
    if test "$py_build" != "ok" ; then
	AC_MSG_ERROR([failed to build extension against Python (>=$DEPVERSION_PYTHON) headers])
    fi
])
AC_DEFUN([AC_DOC_REQUIREMENTS],
[
    # need doxer to generate documentation
    DOXERDEP='#'
    AC_CHECK_PROGS(DOXER, doxer)
    if test -n "$DOXER" ; then
	doxer_version=`$DOXER --version`
	MC_CHECK_VERSION($doxer_version, 0.6, [DOXERDEP=''])
    fi
    AC_SUBST(DOXER)
    AC_SUBST(DOXERDEP)
])
AC_DEFUN([AC_CPU_FLAGS],
[
    # --- FPU flags ---
    # -funroll-loops can boost FPU performance
    MC_PROG_CC_SPECIAL_FLAGS(FPU_FLAGS, -funroll-loops)
    AC_SUBST(FPU_FLAGS)
    # --- MMX flags ---
    MC_PROG_CC_SPECIAL_FLAGS(MMX_FLAGS, -mmmx -funroll-loops -ftree-vectorize)
    AC_SUBST(MMX_FLAGS)
    # --- 3DNow flags ---
    MC_PROG_CC_SPECIAL_FLAGS(AMD3DNOW_FLAGS, -m3dnow -funroll-loops -ftree-vectorize)
    AC_SUBST(AMD3DNOW_FLAGS)
    # --- SSE flags ---
    # * -mfpmath=sse can harm FPU-algorithm performance
    # * -funroll-loops can harm SSE loop performance
    MC_PROG_CC_SPECIAL_FLAGS(SSE_FLAGS, -msse -ftree-vectorize)
    AC_SUBST(SSE_FLAGS)
    # --- SSE2 flags ---
    MC_PROG_CC_SPECIAL_FLAGS(SSE2_FLAGS, -msse2 -ftree-vectorize)
    AC_SUBST(SSE2_FLAGS)
    # --- SSE3 flags ---
    MC_PROG_CC_SPECIAL_FLAGS(SSE3_FLAGS, -msse3 -ftree-vectorize)
    AC_SUBST(SSE3_FLAGS)
])

# check compilers and behaviour; setup CFLAGS
MC_PROG_CC_WITH_CFLAGS
MC_PROG_CXX_WITH_CXXFLAGS
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
AC_C_CONST
AC_C_INLINE
AC_HEADER_STDC

# initialize libtool with dynamic module support
AC_LIBTOOL_DLOPEN
AM_PROG_LIBTOOL

# check for package requirements.
MC_IF_VAR_EQ(GCC, yes,,
    AC_MSG_ERROR(This package requires GNU gcc)
)
MC_IF_VAR_EQ(GXX, yes,,
    AC_MSG_ERROR(This package requires GNU g++)
)

# check build requirements
MC_ASSERT_PROG(PKG_CONFIG, pkg-config, [pkg-config can be found at http://pkgconfig.freedesktop.org/])

# check for development build rules (autogen.sh based builds)
AC_MSG_CHECKING(whether develoment build rules are to be used)
if test x"$enable_devel_rules" = xyes ; then
    AC_MSG_RESULT(yes)
    TEST_SRCDIR=$(cd $srcdir ; /bin/pwd)
    TEST_BUILDDIR=$(cd . ; /bin/pwd)
    AC_MSG_CHECKING(whether source dir equals build dir)
    if test "$TEST_SRCDIR" = "$TEST_BUILDDIR" ; then
	AC_MSG_RESULT(yes)
    else
	AC_MSG_RESULT(no)
	AC_MSG_ERROR([source dir must be the same as build dir for development build rules])
    fi
    DVLBUILD=""
    NOTDVLBUILD=#
else
    AC_MSG_RESULT(no)
    DVLBUILD=#
    NOTDVLBUILD=""
fi
AC_SUBST(DVLBUILD)
AC_SUBST(NOTDVLBUILD)
AM_CONDITIONAL(IF_DVLBUILD, test -z "$DVLBUILD")
AM_CONDITIONAL(IF_NOTDVLBUILD, test -z "$NOTDVLBUILD")

# check for development tools
AC_CHECK_PROGS(XMLLINT, xmllint, true)

# find installation utilities
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PATH_PROG(UPDATE_MIME_DATABASE, update-mime-database)

# check requirement sets
AC_I18N_REQUIREMENTS
AC_GCC_REQUIREMENTS
AC_RAPICORN_CORE_REQUIREMENTS
AC_RAPICORN_REQUIREMENTS
AC_PYRAPICORN_REQUIREMENTS
AC_DOC_REQUIREMENTS
AC_CPU_FLAGS

# automake @VARIABLE@ exports.
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)


# create output files
AC_CONFIG_FILES([
Makefile
po-helper.sh
po/Makefile.in
rapicorn-core/Makefile
rapicorn-core/tests/Makefile
rapicorn/Makefile
rapicorn/tests/Makefile
tools/Makefile
pyrapicorn/Makefile
examples/Makefile
docs/Makefile
docs/imports/Makefile
web/Makefile
])

AC_OUTPUT
