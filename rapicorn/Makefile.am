# Rapicorn
# Copyright (C) 2005 Tim Janik
#
## GNU Lesser General Public License version 2 or any later version.
include $(top_srcdir)/Makefile.decl

INCLUDES       += -I$(top_srcdir) -I$(top_builddir) -I$(srcdir) -I. $(PANGO_CFLAGS) $(GTK_CFLAGS)
GLIB_MKENUMS    = glib-mkenums
LDLIBS	        = $(LIBS) $(PANGO_LIBS) $(GTK_LIBS)
DEFS            = -DRAPICORN_PRIVATE -DPARANOID -D_BIRNET_SOURCE_EXTENSIONS -DBIRNET_LOG_DOMAIN=\"RAPICORN\" # "


rapicorn_top_headers = rapicorn.hh
rapicorn_public_headers = $(strip 	\
	rapicorncore.hh birnetcdefs.h           birnettests.h                   \
        birnetcpu.hh    birnetdebugtools.hh     birnetthread.hh birnetutils.hh  \
        birnetmsg.hh    birnetsignal.hh         birnetmath.hh   birnetutf8.hh   \
        birnetxml.hh    birnetmarkup.hh \
	\
	keycodes.hh	$(rapicorn_impl_headers)	\
	utilities.hh	events.hh	application.hh	\
	enumdefs.hh	primitives.hh	region.hh	loop.hh		viewport.hh		\
	properties.hh	commands.hh	appearance.hh	painter.hh	window.hh		\
	item.hh		container.hh	root.hh		table.hh	arrangement.hh		\
	adjustment.hh	image.hh	paintgadgets.hh	slider.hh	paintcontainers.hh	\
	buttons.hh	factory.hh	evaluator.hh	scrollitems.hh	layoutcontainers.hh	\
	text-editor.hh	text-pango.hh	testitem.hh	\
)
rapicorn_impl_headers = $(strip 	\
	arrangementimpl.hh		\
	containerimpl.hh		\
	itemimpl.hh			\
	rootimpl.hh			\
	scrollitemsimpl.hh		\
	tableimpl.hh			\
)
rapicorn_generated_headers = $(strip	\
        birnetsignalvariants.hh         \
	rapicornconfig.h		\
)
rapicorn_cc_sources = $(strip 		\
        birnetthreadimpl.cc             \
        birnetcpu.cc    birnetdebugtools.cc     birnetthread.cc birnetutils.cc  \
        birnetmsg.cc    birnetsignal.cc         birnetmath.cc   birnetutf8.cc   \
        birnetxml.cc    birnetmarkup.cc \
	\
	viewport-gtk.cc	regionimpl.c	\
	utilities.cc	events.cc	application.cc	\
	enumdefs.cc	primitives.cc	region.cc	loop.cc		viewport.cc		\
	properties.cc	commands.cc	appearance.cc	painter.cc	window.cc		\
	item.cc		container.cc	root.cc		table.cc	arrangement.cc		\
	adjustment.cc	image.cc	paintgadgets.cc	slider.cc	paintcontainers.cc	\
	buttons.cc	factory.cc	evaluator.cc	scrollitems.cc	layoutcontainers.cc	\
	text-editor.cc	text-pango.cc	testitem.cc	\
)
rapicorn_private_files = $(strip 	\
        birnetsignalslot.hh             \
        birnetsignaltemplate.hh         \
	mksignals.sh			\
	regionimpl.h			\
	private.hh			\
	key2utf8.cc			\
)

# libraries
topincludedir   = $(includedir)/rapicorn@LT_RELEASE@
topinclude_DATA = $(rapicorn_top_headers)
EXTRA_DIST     += $(rapicorn_top_headers)
# librapicorn
lib_LTLIBRARIES                         = librapicorn@LT_RELEASE@.la	# hardcoded -release $(LT_RELEASE)
librapicorn@LT_RELEASE@includedir       = $(includedir)/rapicorn@LT_RELEASE@/rapicorn
librapicorn@LT_RELEASE@include_HEADERS  = $(rapicorn_public_headers) $(rapicorn_generated_headers)
librapicorn@LT_RELEASE@_la_SOURCES      = $(rapicorn_cc_sources)
librapicorn@LT_RELEASE@_la_DEPENDENCIES = ldscript.map
librapicorn@LT_RELEASE@_la_LDFLAGS      = $(strip		\
	-Wl,--version-script=$(srcdir)/ldscript.map		\
	-version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE) 	\
	-no-undefined 						\
) # set libtool version and export symbols for resolving
librapicorn@LT_RELEASE@_la_LIBADD       = $(RAPICORN_LIBS) -lm # -lfreetype -lfontconfig
EXTRA_DIST += $(rapicorn_private_files) $(librapicorn@LT_RELEASE@_la_DEPENDENCIES)

# programs (not installed)
noinst_PROGRAMS        = $(ALLTESTS)
progs_ldadd            = librapicorn@LT_RELEASE@.la $(RAPICORN_LIBS) -lm
# birnet-zintern
noinst_PROGRAMS       += birnet-zintern
birnet_zintern_SOURCES = birnet-zintern.cc
birnet_zintern_LDADD   = $(RAPICORN_LIBS) -lm # $(progs_ldadd)
birnet_zintern_DEPS    = $(progs_deps)


# === header-checksum ===
RAPICORN_MAKE_CHECKSUM=$(strip			\
	cat $(filter-out rapicornconfig.h,	\
		$(rapicorn_public_headers)	\
		$(rapicorn_top_headers)		\
		$(rapicorn_generated_headers)	\
	) | md5sum | sed 's/ .*//'		\
)
api-check:	# ensure headers don't change if RELEASE=outdated && REVISION=0
	cd $(srcdir) \
	&& RAPICORN_CURRENT_CHECKSUM=$$($(RAPICORN_MAKE_CHECKSUM))		\
	&& RAPICORN_WEEK_VERSION="$$(expr $$(date +%G) - 2000)$$(date +%V)"	\
	&& test "$$RAPICORN_CURRENT_CHECKSUM"  = "`cat api-check.md5`"		\
	|| if [ "@RAPICORN_RELEASE_VERSION@"   = "$$RAPICORN_WEEK_VERSION" -o	\
		"@RAPICORN_REVISION_VERSION@" -gt 0 ]; then			\
	     echo "$$RAPICORN_CURRENT_CHECKSUM" > api-check.md5 ;		\
	   else \
	     MSG1="The Rapicorn version (@RAPICORN_RELEASE_VERSION@.@RAPICORN_REVISION_VERSION@) needs updating " ;		\
	     MSG2="(expected $$RAPICORN_WEEK_VERSION.0) to match header changes (checksum: $$RAPICORN_CURRENT_CHECKSUM)" ;	\
	     MSG="$$MSG1$$MSG2" ; echo $$MSG | sed 's/./=/g'; echo $$MSG; echo $$MSG | sed 's/./=/g' ;				\
	     exit 1 ; \
	   fi
api-checksum:
	$(RAPICORN_MAKE_CHECKSUM)
#check-am: api-check # this is called by the toplevel Makefile.am
EXTRA_DIST += api-check.md5
.PHONY: api-check api-checksum

#XML_FILES = $(strip standard.xml )
## xml linting
#stamp-xmllint: $(XML_FILES)
#	cd $(srcdir) \
#	&& $(XMLLINT) --noout $(XML_FILES)
#	touch $@
#$(lib_LTLIBRARIES): stamp-xmllint

$(srcdir)/enumdefs.cc: gen-enums.cc
gen-enums.cc: $(srcdir)/enumdefs.hh Makefile
	cd . \
	&& ( cd ${srcdir} && $(GLIB_MKENUMS) \
	  --fprod "\n/* --- @filename@ --- */\n#include\t\"@filename@\"" \
	  --vhead "/* @EnumName@\n */\n" \
	  --vhead "static const @Type@Type<@EnumName@>::Value @EnumName@_value_array[] = {" \
	  --vprod "  { @VALUENAME@, \"@VALUENAME@\", sizeof (\"@VALUENAME@\") - 1 }," \
	  --vtail "};\n" \
	  --vtail "template<> const uint @Type@Type<@EnumName@>::n_values = sizeof (@EnumName@_value_array) / sizeof (@EnumName@_value_array[0]);\n" \
	  --vtail "template<> const @Type@Type@EnumName@::Value *const @Type@Type@EnumName@::values = @EnumName@_value_array;\n" \
	  --vtail "template<> const char *@Type@Type@EnumName@::ename = \"@EnumName@\";" \
	    $^ ) > xgen-enu \
	&& cp xgen-enu $@ \
	&& rm -f xgen-enu
CLEANFILES += xgen-enu gen-enums.cc

XML_FILES   = factory.xml
XMLLINTCALL = $(if $(XMLLINT),$(XMLLINT),true) # handle undefined XMLLINT
xml-lint:
	$(XMLLINTCALL) --noout $(XML_FILES)
.PHONY: xml-lint
stamp-autochecks: $(XML_FILES)
	@$(MAKE) xml-lint
	@touch $@
noinst_DATA = stamp-autochecks
EXTRA_DIST += $(XML_FILES)

gen-zintern.c:	./birnet-zintern $(srcdir)/factory.xml stamp-autochecks
	./birnet-zintern -b -z FACTORY_XML $(srcdir)/factory.xml > xgen-$(@F)
	mv xgen-$(@F) $@
factory.cc: gen-zintern.c
CLEANFILES += xgen-gen-zintern.c gen-zintern.c


# === rapicornconfig.h ===
rapicornconfig.h: $(top_builddir)/config.status # Makefile
	cd . \
	&& echo "/* Generated data from $< (by make $@) */" 					 > xgen-$(@F) \
	&& echo ""										>> xgen-$(@F) \
	&& echo "/* --- select programming environment --- */"					>> xgen-$(@F) \
	&& echo "#ifndef _GNU_SOURCE"								>> xgen-$(@F) \
	&& echo "#define _GNU_SOURCE"								>> xgen-$(@F) \
	&& echo "#endif"									>> xgen-$(@F) \
	&& echo ""										>> xgen-$(@F) \
	&& echo "/* --- unique namespace for all symbols --- */"				>> xgen-$(@F) \
	&& echo "#define Birnet				@BIRNET_NAMESPACE_NAME@"		>> xgen-$(@F) \
	&& echo "#define Rapicorn			@RAPICORN_NAMESPACE_NAME@"		>> xgen-$(@F) \
	&& echo ""										>> xgen-$(@F) \
	&& echo "/* --- standard C code wrappers --- */"					>> xgen-$(@F) \
	&& echo "#ifdef  __cplusplus"								>> xgen-$(@F) \
	&& echo '#define BIRNET_EXTERN_C_BEGIN()	extern "C" {'				>> xgen-$(@F) \
	&& echo "#define BIRNET_EXTERN_C_END()		}"					>> xgen-$(@F) \
	&& echo "#else"										>> xgen-$(@F) \
	&& echo "#define BIRNET_EXTERN_C_BEGIN()"						>> xgen-$(@F) \
	&& echo "#define BIRNET_EXTERN_C_END()"							>> xgen-$(@F) \
	&& echo "#endif"									>> xgen-$(@F) \
	&& echo ""										>> xgen-$(@F) \
	&& echo "/* --- rapicorn version --- */"						>> xgen-$(@F) \
	&& echo "#define RAPICORN_RELEASE_VERSION	(@RAPICORN_RELEASE_VERSION@)"		>> xgen-$(@F) \
	&& echo "#define RAPICORN_REVISION_VERSION	(@RAPICORN_REVISION_VERSION@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_RELEASE_VERSION		(@BIRNET_RELEASE_VERSION@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_REVISION_VERSION	(@BIRNET_REVISION_VERSION@)"		>> xgen-$(@F) \
	&& echo "/* version checks */"								>> xgen-$(@F) \
	&& echo "#define RAPICORN_CHECK_VERSION(relv,revv)	\\"				>> xgen-$(@F) \
	&& echo "  (RAPICORN_RELEASE_VERSION > (relv) || \\"					>> xgen-$(@F) \
	&& echo "   (RAPICORN_RELEASE_VERSION == (relv) && \\" 					>> xgen-$(@F) \
	&& echo "    RAPICORN_REVISION_VERSION >= (revv)))" 					>> xgen-$(@F) \
	&& echo "#define BIRNET_CHECK_VERSION(relv,revv)	\\"				>> xgen-$(@F) \
	&& echo "  (BIRNET_RELEASE_VERSION > (relv) || \\"					>> xgen-$(@F) \
	&& echo "   (BIRNET_RELEASE_VERSION == (relv) && BIRNET_REVISION_VERSION >= (revv)))"	>> xgen-$(@F) \
	&& echo ""										>> xgen-$(@F) \
	&& echo "/* --- log & i18n domains --- */"						>> xgen-$(@F) \
	&& echo "#ifndef BIRNET_LOG_DOMAIN"							>> xgen-$(@F) \
	&& echo "#ifdef  G_LOG_DOMAIN"								>> xgen-$(@F) \
	&& echo "#define BIRNET_LOG_DOMAIN  G_LOG_DOMAIN"					>> xgen-$(@F) \
	&& echo "#else"										>> xgen-$(@F) \
	&& echo "#define BIRNET_LOG_DOMAIN  ((const char*) 0)"					>> xgen-$(@F) \
	&& echo "#endif"									>> xgen-$(@F) \
	&& echo "#endif"									>> xgen-$(@F) \
	&& echo '#define RAPICORN_I18N_DOMAIN    "rapicorn"'					>> xgen-$(@F) \
	&& echo "/* make sure to call bindtextdomain (RAPICORN_I18N_DOMAIN, i18ndir_path); */"	>> xgen-$(@F) \
	&& echo ""										>> xgen-$(@F) \
	&& echo "/* --- backend configuration --- */"						>> xgen-$(@F) \
	&& echo "#define RAPICORN_WITH_GTK	(1)"						>> xgen-$(@F) \
	&& echo "#define RAPICORN_WITH_PANGO	(1)"						>> xgen-$(@F) \
	&& echo ""										>> xgen-$(@F) \
	&& echo "/* --- configure results --- */"						>> xgen-$(@F) \
	&& echo "#define BIRNET_OS_@BIRNET_OS@  	(1) /* one of: @BIRNET_OS_CHOICES@ */"	>> xgen-$(@F) \
	&& echo "#define BIRNET_SIZEOF_POINTER		(@BIRNET_SIZEOF_POINTER@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_SIZEOF_LONG		(@BIRNET_SIZEOF_LONG@)"			>> xgen-$(@F) \
	&& echo "#define BIRNET_SIZEOF_SYS_TYPESH_UINT	(@BIRNET_SIZEOF_SYS_TYPESH_UINT@)"	>> xgen-$(@F) \
	&& echo "#define BIRNET_SIZEOF_PTH_MUTEX_T	(@BIRNET_SIZEOF_PTH_MUTEX_T@)" 		>> xgen-$(@F) \
	&& echo "#define BIRNET_SIZEOF_PTH_COND_T	(@BIRNET_SIZEOF_PTH_COND_T@)" 		>> xgen-$(@F) \
	&& echo "#define BIRNET_HAVE_MUTEXATTR_SETTYPE	(@BIRNET_HAVE_MUTEXATTR_SETTYPE@ && \\" >> xgen-$(@F) \
	&& echo "                                        BIRNET_SIZEOF_PTH_MUTEX_T && \\" 	>> xgen-$(@F) \
	&& echo "                                        BIRNET_SIZEOF_PTH_COND_T)" 		>> xgen-$(@F) \
	&& echo "#define BIRNET_MEMORY_BARRIER_NEEDED   (@BIRNET_MEMORY_BARRIER_NEEDED@)"	>> xgen-$(@F) \
	&& echo ""										>> xgen-$(@F) \
	&& echo "#define BIRNET_SYSVAL_POLLIN 		(@BIRNET_SYSVAL_POLLIN@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_SYSVAL_POLLPRI		(@BIRNET_SYSVAL_POLLPRI@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_SYSVAL_POLLOUT		(@BIRNET_SYSVAL_POLLOUT@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_SYSVAL_POLLRDNORM	(@BIRNET_SYSVAL_POLLRDNORM@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_SYSVAL_POLLRDBAND 	(@BIRNET_SYSVAL_POLLRDBAND@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_SYSVAL_POLLWRNORM   	(@BIRNET_SYSVAL_POLLWRNORM@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_SYSVAL_POLLWRBAND	(@BIRNET_SYSVAL_POLLWRBAND@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_SYSVAL_POLLERR		(@BIRNET_SYSVAL_POLLERR@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_SYSVAL_POLLHUP		(@BIRNET_SYSVAL_POLLHUP@)"		>> xgen-$(@F) \
	&& echo "#define BIRNET_SYSVAL_POLLNVAL		(@BIRNET_SYSVAL_POLLNVAL@)"		>> xgen-$(@F) \
	&& echo ""										>> xgen-$(@F) \
	&& echo "/* Generated data ends here */" 						>> xgen-$(@F) \
	&& cp xgen-$(@F) $@ \
	&& rm -f xgen-$(@F)
CLEANFILES += xgen-rapicornconfig.h rapicornconfig.h
$(librapicorn@LT_RELEASE@_la_OBJECTS): rapicornconfig.h


# === birnetsignalvariants.hh ===
$(srcdir)/*.cc: birnetsignalvariants.hh
birnetsignalvariants.hh: $(srcdir)/birnetsignalslot.hh $(srcdir)/birnetsignaltemplate.hh $(srcdir)/mksignals.sh
	cd . \
	&& echo "/* Signal Variants -- Generated from: $(^F) */"	>xgen-sigs \
	&& echo 						       >>xgen-sigs \
	&& $(srcdir)/mksignals.sh $(srcdir)/birnetsignalslot.hh     17 >>xgen-sigs \
	&& $(srcdir)/mksignals.sh $(srcdir)/birnetsignaltemplate.hh 16 >>xgen-sigs \
	&& cp xgen-sigs $@ \
	&& rm -f xgen-sigs
CLEANFILES += xgen-sigs birnetsignalvariants.hh xgen-signals.sed
